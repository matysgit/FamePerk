
@{
    ViewBag.Title = " Wallet";
    Layout = "~/Views/Shared/_ClientLayout.cshtml";
}

<script src="~/Scripts/jquery-3.0.0.min.js"></script>
<script src="~/Scripts/app/controllers/WalletDetailsController.js"></script>
<script type="text/javascript" src="https://js.stripe.com/v3/"></script>
<script src="https://checkout.stripe.com/checkout.js"></script>

<div class="container position-relative" ng-controller="WalletDetailsController" ng-init="fn_DefaultWalletSettings()" ng-cloak>
    <label class="notification-icon" for="UnReadMsgModal">{{UnReadMsgModal.Message}}</label>

    <div class="page-header">
        <div class="top-tab-holder">
        </div>

        <div class="nav justify-content-end ml-auto mb-3 d-none d-md-block">
        </div>

    </div>
    <div class="card full-width">
        <div class="card-header">
            <div style="width: 50%; float:left">
                <h4 class="card-title">Wallet Details</h4>
            </div>
            <div style="width: 50%; float:right">
                <select style="width: 25%; float: right;" class="form-control" ng-model="CurrencyTypeModal.CurrencyId" ng-options="item.CurrencyId as item.CurrencyName for item in Currency" ng-change="fn_ChangeCurrencyType(CurrencyTypeModal)">
                </select>
            </div>
        </div>
        <div class="card-body">
            <div class="form-horizontal border p-4 mb-5 mt-4">
                <h5 class="border-bottom mb-4 pb-3">Add Amount Details</h5>
                <div>
                    <div class="results"></div>
                    <form id="myForm">
                        <div class="border-box">
                            <div class="form-inline justify-content-center my-4">
                                <input type="number" id="txtAmount" value="10.00" class="form-control" maxlength="100" placeholder="Amount" ng-model="txtWalletAmount" required>
                                &nbsp;
                                <button class="btn btn-primary btn-lg ml-4" id="customButton">
                                    Add  <span class="glyphicon glyphicon-shopping-cart"></span>
                                </button>

                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="form-horizontal px-0">
                <h5>   <label class="border-bottom mb-4 pb-3">Total Available Amount ({{CurrencyTypeModal.CurrencyId}}): </label><label class="border-bottom mb-4 pb-3" ng-model="TotalAmount"> {{TotalAmount}} </label></h5>
                <div class="table-responsive">
                    <table class="table">
                        <thead class=" text-primary">
                            <tr>
                                <th class="w-50">
                                    S NO.
                                </th>
                                <th class="w-25">
                                    Amount ({{CurrencyTypeModal.CurrencyId}})
                                </th>
                                <th class="w-25">
                                    Uploaded Date
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat=" lst in lstWalletAmount" ng-show="!gridLoader">

                                <td>{{ $index + 1 | number }}</td>

                                <td>
                                    {{lst.Amount}}
                                </td>
                                <td>
                                    {{lst.UploadDate}}
                                </td>
                            </tr>

                            <tr ng-show="lstWalletAmount.length < 1 && !gridLoader">
                                <td colspan="3">
                                    <span>No record found</span>
                                </td>
                            </tr>
                            <tr ng-show="gridLoader">
                                <td colspan="3">
                                    <span>Fetching data... Please wait </span><img style="width:80px" src="~/Images/grid_loader.gif" />
                                </td>
                            </tr>
                        </tbody>
                    </table>

                </div>
            </div>
        </div>
    </div>

</div>


<script>
    // check if the amount entered is a valid dollar amount
    var isDollarAmt = function (amt) {
        // matches nnnn.nn
        // amt = 100;
        var regex = /^\d+(\.\d{0,2})?$/;
        return regex.test(amt.replace(/ /g, ''));
    }

    // checkout handler
    var handler = StripeCheckout.configure({
        key: 'pk_test_51ISlIhLdK4kakFbtgwXzBofdRl3AVlh0bEfZGsoryeqc3R4YXD9fulNki6zE3m7s5r5e7EGIAeoEicctZWJI889400H4EouFx7',
        // image: '/img/documentation/checkout/marketplace.png',
        token: function (token) {
            /* Use the token to create the charge with a server-side script.
             You can access the token ID with `token.id`

             Pass along various parameters you get from the token response
             and your form.
            */
            var myData = {
                token: token.id,
                email: token.email,
                amount: Math.round($("#txtAmount").val() * 100)//,
                // checkbox: $("#checkbox").val(),
                // message: $("#message").val()
            };

            /*
             Make an AJAX post request using JQuery,
             change the first parameter to your charge script
            */
            $.post("/client/charge/", myData,
                function (data) {

                    toastr.success('Amount added successfully.', "Success");

                    setTimeout(function () {
                        location.href = '/Client/Wallet';
                    }, 5000);
                }).fail(function () {
                    toastr.error('Amount added fail.', "Error");
                })
        }
    });

    $('#myForm').on('submit', function (e) {

        // is dollar amount valid, open check out
        if (isDollarAmt($("#txtAmount").val())) {
            // Open Checkout with further options
            handler.open({
                name: 'Pay Amount',
                //description: '2 widgets',
                amount: Math.round($("#txtAmount").val() * 100),
            });

        }
        // if not throw an error
        else {
            $(".results").text("That is not a valid dollar amount!");
        }
        e.preventDefault();
    });

    // Close Checkout on page navigation
    $(window).on('popstate', function () {
        handler.close();
    });
</script>